#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram UserBot —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import os
import sys
import asyncio
import logging
from datetime import datetime
import importlib

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
GREEN = '\033[92m'
YELLOW = '\033[93m'
RED = '\033[91m'
BLUE = '\033[94m'
RESET = '\033[0m'
BOLD = '\033[1m'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    logger.warning("python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã.")

# –ü–æ–ª—É—á–µ–Ω–∏–µ API –¥–∞–Ω–Ω—ã—Ö
API_ID = os.getenv("API_ID")
API_HASH = os.getenv("API_HASH")

if not API_ID or not API_HASH:
    print(f"{RED}–û—à–∏–±–∫–∞: API_ID –∏–ª–∏ API_HASH –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è{RESET}")
    print(f"{YELLOW}–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º–∏ API –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç Telegram{RESET}")
    sys.exit(1)

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
try:
    import config
    from telethon import TelegramClient, events
    from log_management import register_handlers as register_log_handlers, setup_logging
    from moderation import register_handlers as register_moderation_handlers
    from admin import register_handlers as register_admin_handlers
    from stats import register_handlers as register_stats_handlers
except ImportError as e:
    print(f"{RED}–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {e}{RESET}")
    print(f"{YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã{RESET}")
    sys.exit(1)

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è utils.commands, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
try:
    from utils.commands import register_handlers as register_utils_handlers
    has_utils_commands = True
except ImportError:
    logger.warning("–ú–æ–¥—É–ª—å utils.commands –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã.")
    has_utils_commands = False

async def help_handler(event):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    cmd_list = "üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã**:\n\n"
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–æ–≤–∞—Ä—å –∫–æ–º–∞–Ω–¥ –≤ –∫–æ–Ω—Ñ–∏–≥–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if hasattr(config, 'COMMANDS') and isinstance(config.COMMANDS, dict):
        for cmd, desc in config.COMMANDS.items():
            cmd_list += f"**/{cmd}** - {desc}\n"
    else:
        # –ò–Ω–∞—á–µ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥
        cmd_list += f"**/{config.CMD_PREFIX}help** - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        cmd_list += f"**/{config.CMD_PREFIX}ping** - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞\n"
        cmd_list += f"**/{config.CMD_PREFIX}log** - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞\n"
        cmd_list += f"**/{config.CMD_PREFIX}users** - –û–±–Ω–æ–≤–∏—Ç—å –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∞–¥–º–∏–Ω–æ–≤\n"
        cmd_list += f"**/{config.CMD_PREFIX}ban** - –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        cmd_list += f"**/{config.CMD_PREFIX}unban** - –†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        cmd_list += f"**/{config.CMD_PREFIX}mute** - –ó–∞–≥–ª—É—à–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        cmd_list += f"**/{config.CMD_PREFIX}unmute** - –†–∞–∑–≥–ª—É—à–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        cmd_list += f"**/{config.CMD_PREFIX}warn** - –í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
        cmd_list += f"**/{config.CMD_PREFIX}tmute** - –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–≥–ª—É—à–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        cmd_list += f"**/{config.CMD_PREFIX}chatstats** - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞\n"
        cmd_list += f"**/{config.CMD_PREFIX}userstats** - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
    
    await event.edit(cmd_list)

async def ping_handler(event):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    start = datetime.now()
    message = await event.edit("üèì Pong!")
    end = datetime.now()
    ms = (end - start).microseconds / 1000
    await message.edit(f"üèì **Pong!**\n‚è± –ó–∞–¥–µ—Ä–∂–∫–∞: {ms:.2f} –º—Å")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        setup_logging()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
        client = TelegramClient(
            config.SESSION_NAME,
            API_ID,
            API_HASH,
            device_model="Termux UserBot",
            system_version="1.0",
            app_version="1.0"
        )
        
        print(f"{BLUE}–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...{RESET}")
        await client.start()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        client.add_event_handler(
            help_handler,
            events.NewMessage(pattern=f"\\{config.CMD_PREFIX}help")
        )
        
        client.add_event_handler(
            ping_handler,
            events.NewMessage(pattern=f"\\{config.CMD_PREFIX}ping")
        )
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        register_log_handlers(client)
        register_moderation_handlers(client)
        register_admin_handlers(client)
        register_stats_handlers(client)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Ç–∏–ª–∏—Ç–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –µ—Å–ª–∏ –º–æ–¥—É–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω
        if has_utils_commands:
            register_utils_handlers(client)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await client.get_me()
        print(f"{GREEN}UserBot –∑–∞–ø—É—â–µ–Ω!{RESET}")
        print(f"{BLUE}–ê–∫–∫–∞—É–Ω—Ç: {me.first_name} (@{me.username}){RESET}")
        logger.info(f"UserBot started as {me.first_name} (@{me.username})")
        
        # –î–µ—Ä–∂–∏–º –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã–º –¥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
        print(f"{YELLOW}–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...{RESET}")
        await client.run_until_disconnected()
        
    except KeyboardInterrupt:
        print(f"\n{YELLOW}–†–∞–±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º{RESET}")
    except Exception as e:
        print(f"{RED}–û—à–∏–±–∫–∞: {str(e)}{RESET}")
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    asyncio.run(main())